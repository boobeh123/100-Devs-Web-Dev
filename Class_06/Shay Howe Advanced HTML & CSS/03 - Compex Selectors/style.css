
/**************************************************************
* http://meyerweb.com/eric/tools/css/reset/ 2. v2.0 | 20110126
* License: none (public domain)
***************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
/**************************************************************
* HTML5 display-role reset for older browsers
***************************************************************/
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ol, ul {
    list-style: none;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

/**************************************************************
* Base styles
***************************************************************/
*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

body {
    font-family: 'Times New Roman','sans-serif';
    font-size: 16px;
    line-height: 22px;
    background-color: #333;
    color: #999
}

a {
    text-decoration: none;
    color: #648880;
}

a:hover {
    color: #a9b2b9;
}
/**************************************************************
* Clearfix
***************************************************************/
.clearfix:before,
.clearfix:after {
    content: "";
    display: table;
}
.clearfix:after {
    clear: both;
}
.clearfix {
    clear: both;
    *zoom: 1;
}
/**************************************************************
* PRACTICE
***************************************************************/

/* Selector demo  */
/* This is a type selector. It selects an element by its type.  */
h1 {
    color: navy;
    border: 2px solid navy;
    border-radius: 5px;
}

/* This is a class selector. It selects an element by the class attribute value  */
.tagline {
    font-variant: small-caps;
    border: 2px solid aqua;
    border-radius: 5px;
    color: navy;
}

/* This is an ID selector. It selects an element by the ID attribute value */
#intro {
    background-color: dodgerblue;
    text-align: center;
}

/* Descendant selectors/combinator demo */
.two {
    color: navy;
    background-color: dodgerblue;
}

/* This is a descendant selector/combinator. It selects  an element that resides anywhere within an identified ancestor element */
article h2 {
    text-align: center;
}

.two h2 {
    border: 2px solid darkblue;
    border-radius: 5px;
}

/* Direct child combinator/selector demo */

.three {
    color: navy;
    background-color: dodgerblue;
}

/* This is a direct child selector. It Selects an element that resides immediately inside an identified parent element */
article > p {
    text-align: center;
}

.three p {
    border: 2px solid aqua;
    border-radius: 5px;
}

/* General sibling selector demo */

.four {
    background-color: darkgreen;
}

/* This is a general sibling selector. It Selects an element that follows anywhere after the prior element, in which both elements share the same parent */
.four h1 ~ p {
    color: navy;
    text-align: center;
}

/* Adjacent sibling selector demo */

.five {
    background-color: olivedrab;
}

/* This is an adjacent sibling selector. It Selects an element that follows directly after the prior element, in which both elements share the same parent */
section p + p {
    color: navy;
    text-align: center;
}

/* Hamburger nav menu */

/* Hides checkbox  */
.six input {
    display: none;
}

/* Clicking label enables checkbox & changes label color when active */
.six input:checked + label{
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15);
    color: lime;
}

/* Surrounds label & ul round border */
.six label,
.six ul {
  border: 1px solid navy;
  border-radius: 6px;
}

/* Label set as inline-block & apply style to label */
.six label {
    display: inline-block;
    padding: .4rem .6rem;
    font-size: 1.1rem;
    transition: all .15s ease;
    color: navy;
    cursor: pointer;
    background-color: dodgerblue;
}

/* Color changes on hover */
.six label:hover {
    color: #ff7b29;
}

/* Max-height & overflow hides anchors from page */
.six nav {
    max-height: 0;
    overflow: hidden;
    transition: all .15s ease;
}

/* Max-height increases when checkbox is enabled */
.six input:checked ~ nav {
    max-height: 500px;
}

/* Decreases width and apply default styles */
.six ul {
    /* list-style: none; */
    margin: .5rem 0 0 0;
    padding: 0;
    width: 100px;
    /* border: 2px solid red; */
}

/* Adds line below listed items */
.six li {
    border-bottom: 1px solid navy;
}

/* Removes line below last listed item */
.six li:last-child {
    border-bottom: 0;
}

/* Applies box model properties to anchors */
.six a {
    display: block;
    color: dodgerblue;
    padding: .45rem .8rem;
    /* text-decoration: none; */
}

/* Apply anchor hover */
.six a:hover {
    color: #ff7b29;
}

/* Attribute selectors */

/* present. Selects an element if the given attribute is present */
.seven a[target] {
    display: inline-block;
    border: 2px solid fuchsia;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* equals. Selects an element if the given attribute value exactly matches the value stated*/
.seven a[href="http://google.com/"] {
    display: inline-block;
    border: 2px solid plum;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* contains. Selects an element if the given attribute value contains at least once instance of the value stated */
.seven a[href*="login"] {
    display: inline-block;
    border: 2px solid darkgreen;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* begins with. Selects an element if the given attribute value begins with the value stated*/
.seven a[href^="https://"] {
    display: inline-block;
    border: 2px solid gold;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* ends with. Selects an element if the given attribute value ends with the value stated*/
.seven a[href$=".pdf"] {
    display: inline-block;
    border: 2px solid salmon;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* Space separated. Selects an element if the given attribute value is whitespace-separated with one word being exactly as stated*/
.seven a[rel~="tag"] {
    display: inline-block;
    border: 2px solid pink;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* Hyphen separated. Selects an element if the given attribute value is hyphen-separated and begins with the word stated */
.seven a[lang|="en"] {
    display: inline-block;
    border: 2px solid violet;
    border-radius: 5px;
    padding: .5rem;
    margin-top: 2rem;
}

/* Attribute selector 2nd demo */

/* Removes default styles  */
/* .eight ul {
    list-style: none;
    margin: 0;
    padding: 0;
} */

/* Applies anchor style. */
.eight a {
    color: dodgerblue;
    padding-left: 1.5rem;
    /* text-decoration: none; */
    background-position: 5% 50%;
    background-repeat: no-repeat;
}

/* Apply anchor hover */
.eight a:hover {
    color: #ff7b29;
}

/* Apply bg-images */
.eight a[href$=".pdf"] {
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/29841/pdf.png");
}
a[href$=".doc"] {
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/29841/doc.png");
}
a[href$=".jpg"] {
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/29841/image.png");
}
a[href$=".mp3"] {
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/29841/audio.png");
}
a[href$=".mp4"] {
    background-image: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/29841/video.png");
}

/* Pseudo-classes */
/* Selects a link that has not been visited by a user */
.nine a:link {
    color: navy;
}
/* Selects a link that has been visited by a user */
.nine a:visited {
    color: purple;
}
/* Selects an element when a user has hovered their cursor over it */
.nine a:hover {
    color: aquamarine;
}

.nine button {
    width: 10em;
    height: 5ex;
    background-image: linear-gradient(135deg, #f34079 40%, #fc894d);
    border: none;
    border-radius: 5px;
    font-weight: bold;
    color: white;
    cursor: pointer;
}
/* Selects an element when a user has engaged it */
.nine button:active {
    box-shadow: 2px 2px 5px #fc894d;
}
/* Selects an element when a user has made it their focus point */
.nine input:focus {
    background-color: #ff7b29;
}
/* Selects an element in the default enabled state */
.nine input:enabled {
    border: 2px solid lime;
}
/* Selects an element in the disabled state, by way of the disabled attribute */
.nine input:disabled {
    border: 2px solid salmon;
}
/* Selects a checkbox or radio button that has been checked */
.nine input:checked {
    border: 2px solid plum;
}
/* Selects a checkbox or radio button that neither been checked or unchecked, leaving it in an indeterminate state */
input:indeterminate {
    box-shadow: 2px 2px 5px red;
}

/* Pseudo-classes */
/* first-child. Selects an element that is the first within a parent */
.ten > ul li:first-child {
    border: 2px solid orchid;
    text-align: center;
}
/* last child. Selects an element that is the last within a parent */
.ten li:last-child {
    text-align: center;
    border: 2px solid palevioletred;
}
/* only child. Selects an element that is the only element within a parent */
.ten div:only-child {
    text-align: center;
    border: 2px solid darkturquoise;
}
/* only-of-type. Selects an element that is the only of its type within a parent*/
.ten article h1:only-of-type {
    border: 2px solid olive;
    text-align: center;
}
/* first-of-type. Selects an element that is the first of its type within a parent */
.ten article p:first-of-type {
    border: 2px solid olivedrab;
    text-align: center;
}
/* last-of-type. Selects an element that is the last of its type within a parent */
.ten article p:last-of-type {
    border: 2px solid oldlace;
    text-align: center;
}
/* nth-child. Selects an element that matches the given number or expression, counting all elements from the beginning of the document tree */
.ten section li:nth-child(3n) {
    border: 2px solid ivory;
    text-align: center;
}

/* nth-last-child. Selects an element that matches the given number or expression, counting all elements from the end of the document tree */
.eleven li:nth-last-child(3n+2) {
    border: 2px solid greenyellow;
    text-align: center;
}

/* nth-of-type. Selects an element that matches the given number or expression, counting only elements of its type from the beginning of the document tree*/
.twelve p:nth-of-type(3n) {
    border: 2px solid goldenrod;
    text-align: right;
}

/* nth-last-of-type. Selects an element that matches the given number or expression, counting only elements of its type from the end of the document tree */
.thirteen p:nth-last-of-type(2n+1) {
    border: 2px solid ghostwhite;
    text-align: right;
}

/* :empty pseudo-class. Selects an element that does not contain any children or text nodes*/
div:empty {
    border: 2px solid indianred;
    height: .9em;

}

/* negation pseudo-class. Selects an element not represented by the stated argument */
/* Selects one div, without negate class
The div:not(.negate) selector identifies any div without the class of negate */
.fifteen div:not(.negate) {
    background-color: forestgreen;
}

/* Selects two sections 
the :not(div) selector identifies any element that isn’t a div */
.fifteen :not(div) {
    background-color: firebrick;
}

/* Textual pseudo-elements */
/* Selects the first letter of text within an element
 Selects the first line of text within an element*/
.sixteen .alpha::first-letter,
.sixteen .bravo::first-line {
    color: peru;
}

/* Generated content pseudo-elements */
/* Creates a pseudo-element inside the selected element at the beginning
 Creates a pseudo-element inside the selected element at the end */
.seventeen a::after {
    color: #999;
    font-size: 8px;
    content: " (" attr(href) ")";
}

/* Fragment pseudo-element */
/* Selects the part of a document which has been selected, or highlighted, by a users’ actions */
.eighteen p::selection {
    background-color: dodgerblue;
    color: salmon;
}

/* Arrow demo */
.arrow {
    background: #2db34a;
    color: #fff;
    display: inline-block;
    height: 30px;
    line-height: 30px;
    padding: 0 12px;
    position: relative;
    margin-left: 20px;;
}

.arrow:before,
.arrow:after {
    position: absolute;
    content: "";
    height: 0;
    width: 0;
}

.arrow:before {
    border-bottom: 15px solid red;
    border-left: 15px solid transparent;
    border-top: 15px solid red;
    left: -15px;
    
  }

  .arrow:after {
    border-bottom: 15px solid transparent;
    border-left: 15px solid red;
    border-top: 15px solid transparent;
    right: -15px;
  }

  .arrow:hover {
    background: #ff7b29;
  }
  .arrow:hover:before {
    border-bottom: 15px solid orange;
    border-top: 15px solid orange;
  }
  .arrow:hover:after {
    border-left: 15px solid orange;
  }